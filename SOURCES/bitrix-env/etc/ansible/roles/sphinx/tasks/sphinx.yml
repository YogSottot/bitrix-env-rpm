---
# create or delete sphinx on defined node
# manage_sphinx
# manage_node
# manage_kernel
# manage_reindex

# create, upload variables that used in playbook
- name: gathering facts about installed sites
  delegate_to: "{{ cluster_web_server }}"
  bx_facts:
    name: list
    password: 0
    install: '(kernel|ext_kernel)'
    status: finished
    dbname: "{{ manage_kernel }}"
  tags: sites_facts

- name: create variable bx_sites_info
  set_fact:
    bx_sites_info: "{{ hostvars[inventory_hostname]['bx_sites'] }}"
  tags: sites_facts

# configure sphinx service
- include_tasks: install.yml
  when: "inventory_hostname == manage_node and manage_sphinx == 'create'"

# create index for sites
- include_tasks: index.yml
  when: "inventory_hostname == manage_node and manage_sphinx == 'create'"

# create or delete sphinx instance in the site
- include_tasks: sites-cache_directory-execute.yml
  vars:
    php_script: "{{ manage_sphinx }}_index_in_web.php"
    php_server: "{{ cluster_web_server }}"
  when: "inventory_hostname == manage_node"

# disable service and delete role
- include_tasks: delete.yml
  when: "inventory_hostname == manage_node and manage_sphinx == 'delete'"

# configure monitoring
#- include_tasks: enable_monitor.yml
#  when: "monitoring_status == 'enable' and inventory_hostname == manage_node and manage_sphinx == 'create'"
#
#- include_tasks: disable_monitor.yml
#  when: "monitoring_status == 'enable' and inventory_hostname == manage_node and manage_sphinx == 'delete'"
